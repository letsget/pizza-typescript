{"version":3,"sources":["assets/img/pizza-logo.svg","components/Logo/index.tsx","components/HeaderCart/index.tsx","components/Header/index.tsx","components/Categories/index.tsx","redux/actions/app.ts","components/Sorting/index.tsx","components/Title/index.tsx","redux/actions/cart.ts","components/PizzaItem/index.tsx","redux/selectors/index.ts","pages/Main.tsx","assets/img/empty-cart.png","pages/CartEmpty/index.jsx","components/CartItem/index.tsx","pages/CartOrder/index.tsx","app/Router.tsx","app/App.tsx","redux/reducers/appReducer.ts","redux/reducers/cartReducer.ts","redux/reducers/index.ts","app/store.ts","app/history.ts","index.tsx"],"names":["Logo","className","width","src","logoSvg","alt","HeaderCart","orderPrice","orderNumber","useSelector","cart","productsInCart","length","to","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Header","Categories","items","onFilter","filter","Object","entries","map","key","current","onClick","LOAD_PIZZAS","SET_CURRENT_FILTER","SET_CURRENT_SORTING_OPTION","loadPizzas","pizzas","type","payload","loadPizzasAsync","dispatch","a","fetch","result","json","console","log","message","response","Sorting","sortItems","currentSortingOption","useDispatch","useState","visible","setVisible","sortRef","useRef","setActive","title","setTitle","onSelect","index","item","handleOutsideClick","e","path","includes","useEffect","document","body","addEventListener","removeEventListener","ref","value","Title","filters","store","app","ADD_TO_CART","ADD_EXISTING_ITEM","HANDLE_INCREMENT","HANDLE_DECREMENT","REMOVE_FROM_CART","CLEAR_CART","PizzaItem","imageUrl","name","types","sizes","price","activeType","setActiveType","activeSize","setActiveSize","finalPrice","setFinalPrice","doughType","classNames","active","size","onSelectSize","findIndex","addExistingItem","img","addToCart","getCurrentSortingOption","getCurrentFilter","currentFilter","getFilters","getCart","getOrderNumber","getOrderPrice","reduce","acc","curr","pizzaPrice","quantity","pizzasToRender","createSelector","pizza","category","toLowerCase","sortedPizzas","option","sort","b","connect","state","sortingOptions","setCurrentFilter","id","rating","CartEmpty","emptyCart","CartItem","total","onRemove","onIncrement","onDecrement","i","handleIncrement","handleDecrement","totalPrice","Router","component","Main","exact","CartOrder","App","initialState","all","meat","vegi","chicken","fish","spicy","default","asc","desc","alph","orderPriceTotal","persistConfig","storage","whiteList","rootReducer","combineReducers","concat","Math","random","updated","incremented","decremented","copy","splice","persistReducer","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","history","createBrowserHistory","ReactDOM","render","getElementById"],"mappings":"yMAAe,MAA0B,uCCe1BA,EAZE,WACf,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,MAAM,KAAKC,IAAKC,EAASC,IAAI,eAClC,gCACE,6CACA,oN,cC2COC,EA5Ce,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzBC,EAAcC,aAClB,qBAAGC,KAAQC,eAA2CC,UAExD,OACE,qBAAKX,UAAU,eAAf,SACE,eAAC,IAAD,CAAMY,GAAG,QAAQZ,UAAU,sBAA3B,UACE,iCAAOM,EAAP,aACA,qBAAKN,UAAU,sBACf,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aAGnB,+BAAOd,UC3BAe,EAXW,SAAC,GAAoB,IAAlBhB,EAAiB,EAAjBA,WAC3B,OACE,qBAAKN,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYM,WAAYA,U,OCYjBiB,EAlBe,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAChD,OACE,qBAAK1B,UAAU,aAAf,SACE,6BACG2B,OAAOC,QAAQJ,GAAOK,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACzB,oBACE/B,UAAW0B,IAAWI,EAAM,SAAW,GACvCE,QAAS,kBAAMP,EAASK,IAF1B,SAKGC,GAFID,W,yBCdJG,EAAc,cACdC,EAAqB,qBACrBC,EAA6B,6BAE7BC,EAAa,SAACC,GAAD,MAAyB,CACjDC,KAAML,EACNM,QAASF,IAaEG,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,+EAENC,MACnB,sDAHyB,cAErBC,EAFqB,gBAKFA,EAAOC,OALL,gBAKnBR,EALmB,EAKnBA,OACRI,EAASL,EAAWC,IANO,kDAQ3BS,QAAQC,KAAI,uCAAKC,WAAL,kCAAgB,KAAKC,WAArB,MARe,0DAAH,sDC6DbC,EAtEY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,qBACjCX,EAAWY,cADiD,EAEpCC,oBAAkB,GAFkB,mBAE3DC,EAF2D,KAElDC,EAFkD,KAG5DC,EAAUC,iBAAuB,MAH2B,EAItCJ,mBAAS,GAJ6B,mBAInDK,GAJmD,aAKxCL,mBAASH,EAAUC,IALqB,mBAK3DQ,EAL2D,KAKpDC,EALoD,KAO5DC,EAAW,SAACC,EAAeC,GAC/BL,EAAUI,GACVF,EAASV,EAAUa,IACnBvB,EDNwD,CAC1DH,KAAMH,EACNI,QCImCyB,IACjCR,GAAW,IAOPS,EAAqB,SAACC,GACrBA,EAAEC,KAAKC,SAASX,EAAQ1B,UAC3ByB,GAAW,IAUf,OANAa,qBAAU,WAGR,OAFAC,SAASC,KAAKC,iBAAiB,QAASP,GAEjC,kBAAMK,SAASC,KAAKE,oBAAoB,QAASR,MACvD,IAGD,sBAAKS,IAAKjB,EAASzD,UAAU,OAA7B,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEA,UAAWuD,EAAU,UAAY,GACjCtD,MAAM,KACNY,OAAO,IACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BANR,SAQE,sBACEC,EAAE,4WACFF,KAAK,cAGT,2GACA,sBAAMiB,QAjCS,WACnBwB,GAAYD,IAgCR,SAA8BK,OAE/BL,GACC,mCACE,qBAAKvD,UAAU,cAAf,SACE,6BACG2B,OAAOC,QAAQuB,GAAWtB,KAAI,WAAekC,GAAf,uBAAEjC,EAAF,KAAO6C,EAAP,YAC7B,oBACE3E,UAAWoD,IAAyBtB,EAAM,SAAW,GACrDE,QAAS,kBAAM8B,EAASC,EAAOjC,IAFjC,SAKG6C,GAFI7C,gBClDR8C,EAVU,SAAC,GAAgB,IAAdlD,EAAa,EAAbA,OACpBmD,EAAUrE,aAAY,SAACsE,GAAD,OAAgBA,EAAMC,IAAIF,WAEtD,OADA/B,QAAQC,IAAI,OAAQ8B,GAElB,oBAAI7E,UAAU,iBAAd,SACc,QAAX0B,EAAmB,oDAAcmD,EAAQnD,MCXnCsD,EAAc,cACdC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAa,a,iBCmFXC,EApFmB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3DlF,EAAOD,aAAY,qBAAGC,KAAqBC,kBAC3C+B,EAAWY,cAF4D,EAGzCC,mBAASmC,EAAM,IAH0B,mBAGtEG,EAHsE,KAG1DC,EAH0D,OAIzCvC,mBAASoC,EAAM,IAJ0B,mBAItEI,EAJsE,KAI1DC,EAJ0D,OAKzCzC,mBAASqC,EAAM,IAL0B,mBAKtEK,EALsE,KAK1DC,EAL0D,KA8B7E,OACE,sBAAKjG,UAAU,cAAf,UACE,qBAAKA,UAAU,qBAAqBE,IAAKqF,EAAUnF,IAAI,UACvD,oBAAIJ,UAAU,qBAAd,SAAoCwF,IACpC,sBAAKxF,UAAU,wBAAf,UACE,6BACGyF,EAAM5D,KAAI,SAACqE,EAAmBnC,GAApB,OACT,oBACE/D,UAAWmG,IAAW,CACpBC,OAAQF,IAAcN,IAExB5D,QAAS,WAjCnB6D,EAiCsCK,IAJ9B,SAOGA,GAFInC,QAMX,6BACG2B,EAAM7D,KAAI,SAACwE,EAActC,GAAf,OACT,qBAEE/B,QAAS,kBAzCA,SAACqE,EAActC,GAClCgC,EAAcM,GACdJ,EAAcN,EAAM5B,IAuCKuC,CAAaD,EAAMtC,IAClC/D,UAAWmG,IAAW,CACpBC,OAAQN,IAAeO,IAJ3B,UAOGA,EAPH,mBACOtC,WAWb,sBAAK/D,UAAU,sBAAf,UACE,sBAAKA,UAAU,qBAAf,UAAqCgG,EAArC,aACA,sBAAKhE,QAhDG,WACZ,IAAM+B,EAAQtD,EAAK8F,WACjB,SAACvC,GAAD,OACEA,EAAKwB,OAASA,GACdxB,EAAK1B,OAASsD,GACd5B,EAAKqC,OAASP,KAGhBrD,EADEsB,GAAS,EDGc,SAACA,EAAe4B,GAAhB,MAAmC,CAChErD,KAAM2C,EACN1C,QAAS,CAAEwB,QAAO4B,UCJLa,CAAgBzC,EAAOiC,GDTb,SACvB1D,EACA+D,EACAV,EACAc,EACAjB,GALuB,MAMnB,CACJlD,KAAM0C,EACNzC,QAAS,CAAED,OAAM+D,OAAMV,QAAOc,MAAKjB,SCGtBkB,CAAUd,EAAYE,EAAYE,EAAYT,EAAUC,KAsC1CxF,UAAU,qCAA/B,UACE,qBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,2QACFF,KAAK,YAGT,8F,gBC9EG4F,EAA0B,SAAC,GAAD,SAAG5B,IACpC3B,sBAIOwD,EAAmB,SAAC,GAAD,SAAG7B,IAAmB8B,eAEzCC,EAAa,SAAC,GAAD,SAAG/B,IAAmBF,SAEnCkC,EAAU,SAAC,GAAD,SAAGtG,KAAqBC,gBAElCsG,EAAiB,SAAC,GAAD,SAAGvG,KAAqBC,eAAeC,QAExDsG,EAAgB,SAAC,GAAD,SAAGxG,KACzBC,eAAewG,QAClB,SAACC,EAAaC,GAAd,OACED,EAAMC,EAAKC,WAAaD,EAAKE,WAC/B,IAGSC,EAAiBC,YAC5B,CAACZ,EAlByB,SAAC,GAAD,SAAG7B,IAAmB1C,QAkBfyE,IACjC,SAACpF,EAAQW,EAAQwC,GACf,MAAe,QAAXnD,EACKW,EAEAA,EAAOX,QACZ,SAAC+F,GAAD,OACEA,EAAMC,SAASC,gBAAkB9C,EAAQnD,GAAQiG,oBAM9CC,EAAeJ,YAC1B,CAACb,EAAyBY,IAC1B,SAACM,EAAQxF,GACP,MAAe,YAAXwF,EACKxF,EACa,QAAXwF,EACF,YAAIxF,GAAQyF,MACjB,SAACpF,EAAeqF,GAAhB,OAAkCrF,EAAEiD,MAAM,GAAKoC,EAAEpC,MAAM,MAErC,SAAXkC,EACF,YAAIxF,GAAQyF,MAAK,SAACpF,EAAGqF,GAAJ,OAAUA,EAAEpC,MAAM,GAAKjD,EAAEiD,MAAM,MACnC,SAAXkC,EACF,YAAIxF,GAAQyF,MAAK,SAACpF,EAAGqF,GAAJ,OAAWrF,EAAE8C,KAAOuC,EAAEvC,KAAO,GAAK,UADrD,KCqGIwC,eAjBS,SAACC,GACvB,MAAO,CACLL,aAAcA,EAAaK,GAC3BvG,OAAQkF,EAAiBqB,GACzBpD,QAASiC,EAAWmB,GACpBC,gBDxI8B,ECwIID,EDxIL,EAAGlD,IAAmBmD,gBCyInD9E,qBAAsBuD,EAAwBsB,GAC9C5F,OACqC,YAAnCsE,EAAwBsB,GACpBV,EAAeU,GACfL,EAAaK,GACnBxH,KAAMsG,EAAQkB,GACd1H,YAAayG,EAAeiB,GAC5B3H,WAAY2G,EAAcgB,IDhJG,IAAC,ICoJnBD,EAxFS,SAAC,GASlB,IARL3F,EAQI,EARJA,OACAX,EAOI,EAPJA,OACAmD,EAMI,EANJA,QACAqD,EAKI,EALJA,eACA9E,EAII,EAJJA,qBACA3C,EAGI,EAHJA,KACAF,EAEI,EAFJA,YACAD,EACI,EADJA,WAEAwC,QAAQC,IAAI,OAAQtC,GACpBqC,QAAQC,IAAI,eAAgBxC,GAE5B,IAAMkC,EAAWY,cAEjBgB,qBAAU,WACR7B,EAAgBC,KACf,IAIH,OACE,mCACE,sBAAKzC,UAAU,UAAf,UACE,cAAC,EAAD,CAAQM,WAAYA,IACpB,qBAAKN,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAYwB,MAAOqD,EAASpD,SATvB,SAAC+D,GAAD,OAAkB/C,ENxEL,SAACf,GAAD,MAAqB,CACnDY,KAAMJ,EACNK,QAASb,GMsEmCyG,CAAiB3C,KASD9D,OAAQA,IACxD,cAAC,EAAD,CACEyB,UAAW+E,EACX9E,qBAAsBA,OAG1B,cAAC,EAAD,CAAO1B,OAAQA,IACf,qBAAK1B,UAAU,iBAAf,SACGqC,GACCA,EAAOR,KACL,WAWEkC,GAXF,IAEIqE,EAFJ,EAEIA,GACA7C,EAHJ,EAGIA,SACAC,EAJJ,EAIIA,KACAC,EALJ,EAKIA,MACAC,EANJ,EAMIA,MACAC,EAPJ,EAOIA,MACA+B,EARJ,EAQIA,SACAW,EATJ,EASIA,OATJ,OAaE,cAAC,EAAD,CAEE9C,SAAUA,EACVC,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACP+B,SAAUA,EACVW,OAAQA,GAPHD,qBCnHZ,MAA0B,uCC0E1BE,EApEG,WAChB,OACE,sBAAKtI,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMY,GAAG,qBAAT,SACE,cAAC,EAAD,MAEF,qBAAKZ,UAAU,eAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,4CACA,qBAAKA,UAAU,sBACf,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aAGnB,mCAKR,qBAAKrB,UAAU,UAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,kHACiB,mDAEjB,iQAEE,uBAFF,uTAKA,qBAAKE,IAAKqI,EAAWnI,IAAI,eACzB,cAAC,IAAD,CAAMQ,GAAG,oBAAoBZ,UAAU,uBAAvC,8GCgDGwI,EAhGa,SAAC,GAYtB,IAXLrE,EAWI,EAXJA,KACAqB,EAUI,EAVJA,KACAU,EASI,EATJA,UACAG,EAQI,EARJA,KACAiB,EAOI,EAPJA,SACA3B,EAMI,EANJA,MACA8C,EAKI,EALJA,MACA1E,EAII,EAJJA,MACA2E,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEA,OACE,sBAAK5I,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,qBAAqBE,IAAKiE,EAAM/D,IAAI,YAErD,sBAAKJ,UAAU,kBAAf,UACE,6BAAKwF,IACL,8BACGU,EADH,KACgBG,EADhB,UAIF,sBAAKrG,UAAU,mBAAf,UACE,qBACEgC,QAAS,kBAAM4G,EAAY7E,EAAO4B,IAClC3F,UAAU,+DAFZ,SAIE,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,qNACFF,KAAK,YAEP,sBACEE,EAAE,gUACFF,KAAK,iBAIX,4BAAIuG,IACJ,qBACEtF,QAAS,kBAAM2G,EAAY5E,EAAO4B,IAClC3F,UAAU,8DAFZ,SAIE,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,qNACFF,KAAK,YAEP,sBACEE,EAAE,gUACFF,KAAK,oBAKb,qBAAKf,UAAU,mBAAf,SACE,4BAAIyI,MAEN,qBAAKzG,QAAS,kBAAM0G,EAAS3E,IAAQ/D,UAAU,oBAA/C,SACE,qBAAKA,UAAU,wCAAf,SACE,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,qNACFF,KAAK,YAEP,sBACEE,EAAE,gUACFF,KAAK,uBCyGJiH,eARS,SAACC,GACvB,MAAO,CACLxH,KAAMsG,EAAQkB,GACd1H,YAAayG,EAAeiB,GAC5B3H,WAAY2G,EAAcgB,MAIfD,EA3Lc,SAAC,GAAuC,IAArCvH,EAAoC,EAApCA,KAAMF,EAA8B,EAA9BA,YAAaD,EAAiB,EAAjBA,WAC3CmC,EAAWY,cAEXqF,EAAW,SAACG,GAAD,OAAepG,EPuBgB,CAChDH,KAAM8C,EACN7C,QOzBwDsG,KAIlDF,EAAc,SAACE,EAAWlD,GAAZ,OAClBlD,EPQ2B,SAACsB,EAAe4B,GAAhB,MAAmC,CAChErD,KAAM4C,EACN3C,QAAS,CAAEwB,QAAO4B,UOVPmD,CAAgBD,EAAGlD,KAExBiD,EAAc,SAACC,EAAWlD,GAAZ,OAClBlD,EPU2B,SAACsB,EAAe4B,GAAhB,MAAmC,CAChErD,KAAM6C,EACN5C,QAAS,CAAEwB,QAAO4B,UOZPoD,CAAgBF,EAAGlD,KAE9B,OACE,sBAAK3F,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMY,GAAG,oBAAT,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAYN,WAAYA,SAG5B,qBAAKN,UAAU,UAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,iBAAd,UACE,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,wLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,yLACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,sWACFC,OAAO,QACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aA3BrB,gDAgCA,sBAAKW,QAtDD,kBAAMS,EP0BQ,CAC9BH,KAAM+C,KO2B6BrF,UAAU,cAAjC,UACE,sBACEC,MAAM,KACNY,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,UAOE,sBACEC,EAAE,sBACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,4dACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,2BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,UAEjB,sBACEJ,EAAE,2BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,aAInB,qIAGJ,qBAAKrB,UAAU,iBAAf,SACGS,EAAKE,QACJF,EAAKoB,KACH,WAWEgH,GAXF,IAEIT,EAFJ,EAEIA,GACA7C,EAHJ,EAGIA,SACAC,EAJJ,EAIIA,KACAlD,EALJ,EAKIA,KACA+D,EANJ,EAMIA,KACAiB,EAPJ,EAOIA,SACAD,EARJ,EAQIA,WACA2B,EATJ,EASIA,WATJ,OAaE,cAAC,EAAD,CAEE7E,KAAMoB,EACNC,KAAMA,EACNU,UAAW5D,EACX+D,KAAMA,EACNiB,SAAUA,EACV3B,MAAO0B,EACPoB,MAAOO,EACPjF,MAAO8E,EACPH,SAAUA,EACVC,YAAaA,EACbC,YAAaA,GAXRR,QAgBf,sBAAKpI,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,iCACG,IADH,4DAEc,8BAAIO,EAAJ,oBAAyB,OAEvC,iCACG,IADH,wEAEgB,8BAAID,EAAJ,aAAsB,UAGxC,sBAAKN,UAAU,uBAAf,UACE,eAAC,IAAD,CACEY,GAAG,oBACHZ,UAAU,iDAFZ,UAIE,qBACEC,MAAM,IACNY,OAAO,KACPC,QAAQ,WACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,4BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,YAInB,4HAEF,qBAAKrB,UAAU,iBAAf,SACE,8ICvKHiJ,EAfA,WACb,IAAMxI,EAAOD,aAAY,qBAAGC,KAAqBC,kBAEjD,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyD,KAAK,oBAAoB+E,UAAWC,EAAMC,OAAK,IACrD3I,EAAKE,OACJ,cAAC,IAAD,CAAOwD,KAAK,QAAQ+E,UAAWG,EAAWD,OAAK,IAE/C,cAAC,IAAD,CAAOjF,KAAK,QAAQ+E,UAAWZ,EAAWc,OAAK,QCXxCE,EAFC,kBAAM,cAAC,EAAD,K,sECqBhBC,GAAmC,CACvClH,OAAQ,GACRwC,QAAS,CACP2E,IAAK,qBACLC,KAAM,uCACNC,KAAM,uFACNC,QAAS,oDACTC,KAAM,wCACNC,MAAO,wCAEThD,cAAe,MACfqB,eAAgB,CACd4B,QAAS,2EACTC,IAAK,wFACLC,KAAM,wFACNC,KAAM,oDAER7G,qBAAsB,WCzBlBmG,GAAmC,CACvC7I,eAAgB,GAChBH,YAAa,EACb2J,gBAAiB,GCZbC,GAAgB,CACpBrI,IAAK,OACLsI,aACAC,UAAW,CAAC,SAGRC,GAAcC,2BAAgB,CAClCxF,IF8BiB,WAA4D,IAA3DkD,EAA0D,uDAAlDsB,GAAkD,yCAAlCjH,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAChD,OAAQD,GACN,KAAKL,EACH,OAAO,6BACFgG,GADL,IAEE5F,OAAQE,IAEZ,KAAKL,EAEH,OADAY,QAAQC,IAAI,kBAAmBR,GACxB,6BACF0F,GADL,IAEEpB,cAAetE,IAEnB,KAAKJ,EAEH,OADAW,QAAQC,IAAI,kBAAmBR,GACxB,6BACF0F,GADL,IAEE7E,qBAAsBb,IAE1B,QACE,OAAO,gBACF0F,KElDTxH,KDOkB,WAAmD,IAAlDwH,EAAiD,uDAAzCsB,GAAyC,yCAAzBjH,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QACjD,OAAQD,GACN,KAAK0C,EAEH,OADAlC,QAAQC,IAAI,oBAAqBR,GAC1B,6BACF0F,GADL,IAEEvH,eAAgBuH,EAAMvH,eAAe8J,OAAO,CAC1CpC,GAAIqC,KAAKC,SACTnF,SAAUhD,EAAQkE,IAClBjB,KAAMjD,EAAQiD,KACdlD,KAAMC,EAAQD,KACd+D,KAAM9D,EAAQ8D,KACdiB,SAAU,EACVD,WAAY9E,EAAQoD,MACpBqD,WAAYzG,EAAQoD,UAG1B,KAAKV,EAAL,IACUlB,EAAiBxB,EAAjBwB,MAAO4B,EAAUpD,EAAVoD,MACTgF,EAAO,YAAO1C,EAAMvH,gBAG1B,OAFAiK,EAAQ5G,GAAOuD,SAAWqD,EAAQ5G,GAAOuD,SAAW,EACpDqD,EAAQ5G,GAAOiF,WAAa2B,EAAQ5G,GAAOiF,WAAarD,EACjD,6BACFsC,GADL,IAEEvH,eAAgBiK,IAEpB,KAAKzF,EACHpC,QAAQC,IAAIR,GACZ,IAAMqI,EAAW,YAAO3C,EAAMvH,gBAG9B,OAFAkK,EAAYrI,EAAQwB,OAAOuD,UAAY,EACvCsD,EAAYrI,EAAQwB,OAAOiF,YAAczG,EAAQoD,MAC1C,6BACFsC,GADL,IAEEvH,eAAgBkK,IAEpB,KAAKzF,EACHrC,QAAQC,IAAIR,GACZ,IAAMsI,EAAW,YAAO5C,EAAMvH,gBAK9B,OAJImK,EAAYtI,EAAQwB,OAAOuD,SAAW,IACxCuD,EAAYtI,EAAQwB,OAAOuD,UAAY,EACvCuD,EAAYtI,EAAQwB,OAAOiF,YAAczG,EAAQoD,OAE5C,6BACFsC,GADL,IAEEvH,eAAgBmK,IAEpB,KAAKzF,EACH,IAAM0F,EAAI,YAAO7C,EAAMvH,gBAEvB,OADAoK,EAAKC,OAAOxI,EAAS,GACd,6BACF0F,GADL,IAEEvH,eAAgBoK,IAEpB,KAAKzF,EACH,OAAO,6BACF4C,GADL,IAEEvH,eAAgB,KAEpB,QACE,OAAO,gBACFuH,OChEI+C,gBAAeb,GAAeG,ICXvCW,GAAa,CAACC,KAEdpG,GAAQqG,uBACZb,GACAc,+BAAoBC,mBAAe,WAAf,EAAmBJ,MAGnCK,GAAYC,aAAazG,I,QCblB0G,GAAUC,eCSvBC,IAASC,OACP,cAAC,IAAD,CAAQH,QAASA,GAAjB,SACE,cAAC,IAAD,CAAU1G,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAawG,UAAWA,GAAxB,SACE,cAAC,EAAD,UAINhH,SAASsH,eAAe,W","file":"static/js/main.67c0d6ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import React, { FC } from \"react\";\r\nimport logoSvg from \"../../assets/img/pizza-logo.svg\";\r\n\r\nconst Logo: FC = () => {\r\n  return (\r\n    <div className=\"header__logo\">\r\n      <img width=\"38\" src={logoSvg} alt=\"Pizza logo\" />\r\n      <div>\r\n        <h1>React Pizza</h1>\r\n        <p>самая вкусная пицца во вселенной</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface Props {\r\n  orderPrice: number;\r\n}\r\n\r\nconst HeaderCart: FC<Props> = ({ orderPrice }) => {\r\n  const orderNumber = useSelector(\r\n    ({ cart: { productsInCart } }: any) => productsInCart.length\r\n  );\r\n  return (\r\n    <div className=\"header__cart\">\r\n      <Link to=\"/cart\" className=\"button button--cart\">\r\n        <span>{orderPrice} ₽</span>\r\n        <div className=\"button__delimiter\"></div>\r\n        <svg\r\n          width=\"18\"\r\n          height=\"18\"\r\n          viewBox=\"0 0 18 18\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n            stroke=\"white\"\r\n            strokeWidth=\"1.8\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n            stroke=\"white\"\r\n            strokeWidth=\"1.8\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n            stroke=\"white\"\r\n            strokeWidth=\"1.8\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n        <span>{orderNumber}</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderCart;\r\n","import React, { FC } from \"react\";\r\nimport Logo from \"../Logo\";\r\nimport HeaderCart from \"../HeaderCart\";\r\n\r\ninterface Props {\r\n  orderPrice: number;\r\n}\r\n\r\nconst Header: FC<Props> = ({ orderPrice }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <Logo />\r\n        <HeaderCart orderPrice={orderPrice} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC, useState } from \"react\";\r\n\r\ninterface Props {\r\n  items: any;\r\n  onFilter: Function;\r\n  filter: string;\r\n}\r\nconst Categories: FC<Props> = ({ items, onFilter, filter }) => {\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul>\r\n        {Object.entries(items).map(([key, current]: any[]) => (\r\n          <li\r\n            className={filter === key ? \"active\" : \"\"}\r\n            onClick={() => onFilter(key)}\r\n            key={key}\r\n          >\r\n            {current}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import { PizzaProps } from \"../../types\";\r\nexport const LOAD_PIZZAS = \"LOAD_PIZZAS\";\r\nexport const SET_CURRENT_FILTER = \"SET_CURRENT_FILTER\";\r\nexport const SET_CURRENT_SORTING_OPTION = \"SET_CURRENT_SORTING_OPTION\";\r\n\r\nexport const loadPizzas = (pizzas: PizzaProps) => ({\r\n  type: LOAD_PIZZAS,\r\n  payload: pizzas,\r\n});\r\n\r\nexport const setCurrentFilter = (filter: string) => ({\r\n  type: SET_CURRENT_FILTER,\r\n  payload: filter,\r\n});\r\n\r\nexport const setCurrentSortingOption = (option: string) => ({\r\n  type: SET_CURRENT_SORTING_OPTION,\r\n  payload: option,\r\n});\r\n\r\nexport const loadPizzasAsync = async (dispatch: Function): Promise<any> => {\r\n  try {\r\n    const result = await fetch(\r\n      \"https://letsget.github.io/pizza-typescript/db.json\"\r\n    );\r\n    const { pizzas } = await result.json();\r\n    dispatch(loadPizzas(pizzas));\r\n  } catch (err) {\r\n    console.log(err?.message || err?.response || err);\r\n  }\r\n};\r\n","import React, { FC, useState, useEffect, useRef } from \"react\";\r\nimport { setCurrentSortingOption } from \"../../redux/actions/app\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface Props {\r\n  sortItems: {\r\n    [key: string]: string;\r\n  };\r\n  currentSortingOption: string;\r\n}\r\n\r\nconst Sorting: FC<Props> = ({ sortItems, currentSortingOption }) => {\r\n  const dispatch = useDispatch();\r\n  const [visible, setVisible] = useState<Boolean>(false);\r\n  const sortRef = useRef<HTMLDivElement>(null);\r\n  const [active, setActive] = useState(0);\r\n  const [title, setTitle] = useState(sortItems[currentSortingOption]);\r\n\r\n  const onSelect = (index: number, item: string) => {\r\n    setActive(index);\r\n    setTitle(sortItems[item]);\r\n    dispatch(setCurrentSortingOption(item));\r\n    setVisible(false);\r\n  };\r\n\r\n  const displayPopup = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  const handleOutsideClick = (e: any) => {\r\n    if (!e.path.includes(sortRef.current)) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"click\", handleOutsideClick);\r\n\r\n    return () => document.body.removeEventListener(\"click\", handleOutsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortRef} className=\"sort\">\r\n      <div className=\"sort__label\">\r\n        <svg\r\n          className={visible ? \"rotated\" : \"\"}\r\n          width=\"10\"\r\n          height=\"6\"\r\n          viewBox=\"0 0 10 6\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n            fill=\"#2C2C2C\"\r\n          />\r\n        </svg>\r\n        <b>Сортировка по:</b>\r\n        <span onClick={displayPopup}>{title}</span>\r\n      </div>\r\n      {visible && (\r\n        <>\r\n          <div className=\"sort__popup\">\r\n            <ul>\r\n              {Object.entries(sortItems).map(([key, value], index) => (\r\n                <li\r\n                  className={currentSortingOption === key ? \"active\" : \"\"}\r\n                  onClick={() => onSelect(index, key)}\r\n                  key={key}\r\n                >\r\n                  {value}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n","import React, { FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import type { RootState } from \"../../app/store\";\r\n\r\ninterface Props {\r\n  filter: any;\r\n}\r\n\r\nconst Title: FC<Props> = ({ filter }) => {\r\n  const filters = useSelector((store: any) => store.app.filters);\r\n  console.log(\"1111\", filters);\r\n  return (\r\n    <h2 className=\"content__title\">\r\n      {filter === \"all\" ? \"Все пиццы\" : filters[filter]}\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { PizzaProps, PizzaInCartProps } from \"../../types\";\r\nexport const LOAD_CART_PRODUCTS = \"LOAD_CART_PRODUCTS\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_EXISTING_ITEM = \"ADD_EXISTING_ITEM\";\r\nexport const HANDLE_INCREMENT = \"HANDLE_INCREMENT\";\r\nexport const HANDLE_DECREMENT = \"HANDLE_DECREMENT\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n// id: Math.random(),\r\n// imageUrl: \"none\",\r\n// name: \"test\",\r\n// type: payload.activeType,\r\n// size: payload.activeSize,\r\n// quantity: payload.count,\r\n// pizzaPrice: payload.finalPrice,\r\n\r\nexport const loadCardProducts = (cart: PizzaInCartProps) => ({\r\n  type: LOAD_CART_PRODUCTS,\r\n  payload: cart,\r\n});\r\n\r\nexport const addToCart = (\r\n  type: string,\r\n  size: number,\r\n  price: number,\r\n  img: string,\r\n  name: string\r\n) => ({\r\n  type: ADD_TO_CART,\r\n  payload: { type, size, price, img, name },\r\n});\r\n\r\nexport const addExistingItem = (index: number, price: number) => ({\r\n  type: ADD_EXISTING_ITEM,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const handleIncrement = (index: number, price: number) => ({\r\n  type: HANDLE_INCREMENT,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const handleDecrement = (index: number, price: number) => ({\r\n  type: HANDLE_DECREMENT,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const removeFromCart = (index: number) => ({\r\n  type: REMOVE_FROM_CART,\r\n  payload: index,\r\n});\r\n\r\nexport const clearCart = () => ({\r\n  type: CLEAR_CART,\r\n});\r\n","import React, { FC, useState } from \"react\";\r\nimport { addToCart, addExistingItem } from \"../../redux/actions/cart\";\r\nimport { PizzaProps, PizzaInCartProps } from \"../../types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PizzaItem: FC<PizzaProps> = ({ imageUrl, name, types, sizes, price }) => {\r\n  const cart = useSelector(({ cart }: any) => cart.productsInCart);\r\n  const dispatch = useDispatch();\r\n  const [activeType, setActiveType] = useState(types[0]);\r\n  const [activeSize, setActiveSize] = useState(sizes[1]);\r\n  const [finalPrice, setFinalPrice] = useState(price[1]);\r\n\r\n  const onSelectType = (type: string) => {\r\n    setActiveType(type);\r\n  };\r\n\r\n  const onSelectSize = (size: number, index: number) => {\r\n    setActiveSize(size);\r\n    setFinalPrice(price[index]);\r\n  };\r\n\r\n  const onAdd = () => {\r\n    const index = cart.findIndex(\r\n      (item: PizzaInCartProps) =>\r\n        item.name === name &&\r\n        item.type === activeType &&\r\n        item.size === activeSize\r\n    );\r\n    if (index >= 0) {\r\n      dispatch(addExistingItem(index, finalPrice));\r\n    } else {\r\n      dispatch(addToCart(activeType, activeSize, finalPrice, imageUrl, name));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pizza-block\">\r\n      <img className=\"pizza-block__image\" src={imageUrl} alt=\"Pizza\" />\r\n      <h4 className=\"pizza-block__title\">{name}</h4>\r\n      <div className=\"pizza-block__selector\">\r\n        <ul>\r\n          {types.map((doughType: string, index: number) => (\r\n            <li\r\n              className={classNames({\r\n                active: doughType === activeType,\r\n              })}\r\n              onClick={() => onSelectType(doughType)}\r\n              key={index}\r\n            >\r\n              {doughType}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul>\r\n          {sizes.map((size: number, index: number) => (\r\n            <li\r\n              key={index}\r\n              onClick={() => onSelectSize(size, index)}\r\n              className={classNames({\r\n                active: activeSize === size,\r\n              })}\r\n            >\r\n              {size} см.\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"pizza-block__bottom\">\r\n        <div className=\"pizza-block__price\">{finalPrice} ₽</div>\r\n        <div onClick={onAdd} className=\"button button--outline button--add\">\r\n          <svg\r\n            width=\"12\"\r\n            height=\"12\"\r\n            viewBox=\"0 0 12 12\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n              fill=\"white\"\r\n            />\r\n          </svg>\r\n          <span>Добавить</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PizzaItem;\r\n","import { createSelector } from \"reselect\";\r\nimport { PizzaProps, PizzaInCartProps } from \"../../types\";\r\n\r\nexport const getSortingOptions = ({ app }: any) => app.sortingOptions;\r\n\r\nexport const getCurrentSortingOption = ({ app }: any) =>\r\n  app.currentSortingOption;\r\n\r\nexport const getAllPizzas = ({ app }: any) => app.pizzas;\r\n\r\nexport const getCurrentFilter = ({ app }: any) => app.currentFilter;\r\n\r\nexport const getFilters = ({ app }: any) => app.filters;\r\n\r\nexport const getCart = ({ cart }: any) => cart.productsInCart;\r\n\r\nexport const getOrderNumber = ({ cart }: any) => cart.productsInCart.length;\r\n\r\nexport const getOrderPrice = ({ cart }: any) =>\r\n  cart.productsInCart.reduce(\r\n    (acc: number, curr: PizzaInCartProps) =>\r\n      acc + curr.pizzaPrice * curr.quantity,\r\n    0\r\n  );\r\n\r\nexport const pizzasToRender = createSelector(\r\n  [getCurrentFilter, getAllPizzas, getFilters],\r\n  (filter, pizzas, filters) => {\r\n    if (filter === \"all\") {\r\n      return pizzas;\r\n    } else {\r\n      return pizzas.filter(\r\n        (pizza: PizzaProps) =>\r\n          pizza.category.toLowerCase() === filters[filter].toLowerCase()\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const sortedPizzas = createSelector(\r\n  [getCurrentSortingOption, pizzasToRender],\r\n  (option, pizzas) => {\r\n    if (option === \"default\") {\r\n      return pizzas;\r\n    } else if (option === \"asc\") {\r\n      return [...pizzas].sort(\r\n        (a: PizzaProps, b: PizzaProps) => a.price[0] - b.price[0]\r\n      );\r\n    } else if (option === \"desc\") {\r\n      return [...pizzas].sort((a, b) => b.price[0] - a.price[0]);\r\n    } else if (option === \"alph\") {\r\n      return [...pizzas].sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    }\r\n  }\r\n);\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Categories from \"../components/Categories\";\r\nimport Sorting from \"../components/Sorting\";\r\nimport Title from \"../components/Title\";\r\nimport PizzaItem from \"../components/PizzaItem\";\r\nimport { PizzaProps, PizzaInCartProps } from \"../types\";\r\nimport {\r\n  getCurrentFilter,\r\n  getFilters,\r\n  pizzasToRender,\r\n  getSortingOptions,\r\n  getCurrentSortingOption,\r\n  sortedPizzas,\r\n  getCart,\r\n  getOrderNumber,\r\n  getOrderPrice,\r\n} from \"../redux/selectors\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadPizzasAsync, setCurrentFilter } from \"../redux/actions/app\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/*\r\n   Install and setup redux                                                 [✓]\r\n   load pizzas and put them in a redux state                               [✓]\r\n   Move filters to redux state                                             [✓]\r\n   Add setActiveFilter and active filter to redux state and actions        [✓]\r\n   add reselect to fetch the requird data from redux store                 [✓]\r\n   write selectors and reselect for filtering/sorting                      [✓]  \r\n   fix filtering options - create an object of filters in store            [✓]\r\n  \r\n   modify the json file to include object with prices based on types       [✓]\r\n\r\n   add Cart state to redux store and add actions to add items to cart      [✓]\r\n\r\n   use classNames library for generating classes dynamically\r\n  \r\n   Load products in cart when a user enters the cart page                  [✓]\r\n\r\n   add remove option                                                       [✓]\r\n\r\n   add clear cart option                                                   [✓]\r\n\r\n   use dynamic rendering and redirect user to empty cart page if there\r\n   are no products in the cart\r\n\r\n   add increment/decrement products in cart property in cart\r\n*/\r\n\r\ninterface Props {\r\n  pizzas: PizzaProps[];\r\n  filter: string;\r\n  filters: any;\r\n  sortingOptions: {\r\n    [key: string]: string;\r\n  };\r\n  currentSortingOption: string;\r\n  sortedPizzas: PizzaProps;\r\n  cart: PizzaInCartProps;\r\n  orderNumber: number;\r\n  orderPrice: number;\r\n}\r\n\r\nconst Main: FC<Props> = ({\r\n  pizzas,\r\n  filter,\r\n  filters,\r\n  sortingOptions,\r\n  currentSortingOption,\r\n  cart,\r\n  orderNumber,\r\n  orderPrice,\r\n}) => {\r\n  console.log(\"cart\", cart);\r\n  console.log(\"order number\", orderNumber);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    loadPizzasAsync(dispatch);\r\n  }, []);\r\n\r\n  const onFilter = (name: string) => dispatch(setCurrentFilter(name));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Header orderPrice={orderPrice} />\r\n        <div className=\"content\">\r\n          <div className=\"container\">\r\n            <div className=\"content__top\">\r\n              <Categories items={filters} onFilter={onFilter} filter={filter} />\r\n              <Sorting\r\n                sortItems={sortingOptions}\r\n                currentSortingOption={currentSortingOption}\r\n              />\r\n            </div>\r\n            <Title filter={filter} />\r\n            <div className=\"content__items\">\r\n              {pizzas &&\r\n                pizzas.map(\r\n                  (\r\n                    {\r\n                      id,\r\n                      imageUrl,\r\n                      name,\r\n                      types,\r\n                      sizes,\r\n                      price,\r\n                      category,\r\n                      rating,\r\n                    }: PizzaProps,\r\n                    index: number\r\n                  ) => (\r\n                    <PizzaItem\r\n                      key={id}\r\n                      imageUrl={imageUrl}\r\n                      name={name}\r\n                      types={types}\r\n                      sizes={sizes}\r\n                      price={price}\r\n                      category={category}\r\n                      rating={rating}\r\n                    />\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    sortedPizzas: sortedPizzas(state),\r\n    filter: getCurrentFilter(state),\r\n    filters: getFilters(state),\r\n    sortingOptions: getSortingOptions(state),\r\n    currentSortingOption: getCurrentSortingOption(state),\r\n    pizzas:\r\n      getCurrentSortingOption(state) === \"default\"\r\n        ? pizzasToRender(state)\r\n        : sortedPizzas(state),\r\n    cart: getCart(state),\r\n    orderNumber: getOrderNumber(state),\r\n    orderPrice: getOrderPrice(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../components/Logo\";\r\nimport emptyCart from \"../../assets/img/empty-cart.png\";\r\n\r\nconst CartEmpty = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"header\">\r\n        <div className=\"container\">\r\n          <Link to=\"./pizza-typescript\">\r\n            <Logo />\r\n          </Link>\r\n          <div className=\"header__cart\">\r\n            <div className=\"button button--cart\">\r\n              <span>0 ₽</span>\r\n              <div className=\"button__delimiter\" />\r\n              <svg\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 18 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"container container--cart\">\r\n          <div className=\"cart cart--empty\">\r\n            <h2>\r\n              Корзина пустая <span>😕</span>\r\n            </h2>\r\n            <p>\r\n              Вероятней всего, вы не заказывали ещё пиццу.\r\n              <br />\r\n              Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n            </p>\r\n            <img src={emptyCart} alt=\"Empty cart\" />\r\n            <Link to=\"/pizza-typescript\" className=\"button button--black\">\r\n              Вернуться назад\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartEmpty;\r\n","import React, { FC } from \"react\";\r\n\r\ninterface Props {\r\n  path: string;\r\n  name: string;\r\n  doughType: string;\r\n  size: number;\r\n  quantity: number;\r\n  price: number;\r\n  total: number;\r\n  index: number;\r\n  onRemove: Function;\r\n  onIncrement: Function;\r\n  onDecrement: Function;\r\n}\r\n\r\nconst CartItem: FC<Props> = ({\r\n  path,\r\n  name,\r\n  doughType,\r\n  size,\r\n  quantity,\r\n  price,\r\n  total,\r\n  index,\r\n  onRemove,\r\n  onIncrement,\r\n  onDecrement,\r\n}) => {\r\n  return (\r\n    <div className=\"cart__item\">\r\n      <div className=\"cart__item-img\">\r\n        <img className=\"pizza-block__image\" src={path} alt=\"Pizza\" />\r\n      </div>\r\n      <div className=\"cart__item-info\">\r\n        <h3>{name}</h3>\r\n        <p>\r\n          {doughType}, {size}.\r\n        </p>\r\n      </div>\r\n      <div className=\"cart__item-count\">\r\n        <div\r\n          onClick={() => onDecrement(index, price)}\r\n          className=\"button button--outline button--circle cart__item-count-minus\"\r\n        >\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <b>{quantity}</b>\r\n        <div\r\n          onClick={() => onIncrement(index, price)}\r\n          className=\"button button--outline button--circle cart__item-count-plus\"\r\n        >\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <div className=\"cart__item-price\">\r\n        <b>{total}</b>\r\n      </div>\r\n      <div onClick={() => onRemove(index)} className=\"cart__item-remove\">\r\n        <div className=\"button button--outline button--circle\">\r\n          <svg\r\n            width=\"10\"\r\n            height=\"10\"\r\n            viewBox=\"0 0 10 10\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n            <path\r\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n              fill=\"#EB5A1E\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCart from \"../../components/HeaderCart\";\r\nimport Logo from \"../../components/Logo\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport {\r\n  removeFromCart,\r\n  clearCart,\r\n  handleIncrement,\r\n  handleDecrement,\r\n} from \"../../redux/actions/cart\";\r\nimport { PizzaInCartProps } from \"../../types\";\r\nimport { getCart, getOrderNumber, getOrderPrice } from \"../../redux/selectors\";\r\nimport CartItem from \"../../components/CartItem\";\r\n\r\ninterface Props {\r\n  cart: PizzaInCartProps[];\r\n  orderNumber: number;\r\n  orderPrice: number;\r\n}\r\n\r\nconst CartOrder: FC<Props> = ({ cart, orderNumber, orderPrice }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemove = (i: number) => dispatch(removeFromCart(i));\r\n\r\n  const onClear = () => dispatch(clearCart());\r\n\r\n  const onIncrement = (i: number, price: number) =>\r\n    dispatch(handleIncrement(i, price));\r\n\r\n  const onDecrement = (i: number, price: number) =>\r\n    dispatch(handleDecrement(i, price));\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"header\">\r\n        <div className=\"container\">\r\n          <Link to=\"/pizza-typescript\">\r\n            <Logo />\r\n          </Link>\r\n          <HeaderCart orderPrice={orderPrice} />\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"container container--cart\">\r\n          <div className=\"cart\">\r\n            <div className=\"cart__top\">\r\n              <h2 className=\"content__title\">\r\n                <svg\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 18 18\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"1.8\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"1.8\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"1.8\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n                Корзина\r\n              </h2>\r\n              <div onClick={onClear} className=\"cart__clear\">\r\n                <svg\r\n                  width=\"20\"\r\n                  height=\"20\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M2.5 5H4.16667H17.5\"\r\n                    stroke=\"#B6B6B6\"\r\n                    strokeWidth=\"1.2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                    stroke=\"#B6B6B6\"\r\n                    strokeWidth=\"1.2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M8.33337 9.16667V14.1667\"\r\n                    stroke=\"#B6B6B6\"\r\n                    strokeWidth=\"1.2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                  <path\r\n                    d=\"M11.6666 9.16667V14.1667\"\r\n                    stroke=\"#B6B6B6\"\r\n                    strokeWidth=\"1.2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n\r\n                <span>Очистить корзину</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"content__items\">\r\n              {cart.length &&\r\n                cart.map(\r\n                  (\r\n                    {\r\n                      id,\r\n                      imageUrl,\r\n                      name,\r\n                      type,\r\n                      size,\r\n                      quantity,\r\n                      pizzaPrice,\r\n                      totalPrice,\r\n                    },\r\n                    i\r\n                  ) => (\r\n                    <CartItem\r\n                      key={id}\r\n                      path={imageUrl}\r\n                      name={name}\r\n                      doughType={type}\r\n                      size={size}\r\n                      quantity={quantity}\r\n                      price={pizzaPrice}\r\n                      total={totalPrice}\r\n                      index={i}\r\n                      onRemove={onRemove}\r\n                      onIncrement={onIncrement}\r\n                      onDecrement={onDecrement}\r\n                    />\r\n                  )\r\n                )}\r\n            </div>\r\n            <div className=\"cart__bottom\">\r\n              <div className=\"cart__bottom-details\">\r\n                <span>\r\n                  {\" \"}\r\n                  Всего пицц: <b>{orderNumber} шт.</b>{\" \"}\r\n                </span>\r\n                <span>\r\n                  {\" \"}\r\n                  Сумма заказа: <b>{orderPrice} ₽</b>{\" \"}\r\n                </span>\r\n              </div>\r\n              <div className=\"cart__bottom-buttons\">\r\n                <Link\r\n                  to=\"/pizza-typescript\"\r\n                  className=\"button button--outline button--add go-back-btn\"\r\n                >\r\n                  <svg\r\n                    width=\"8\"\r\n                    height=\"14\"\r\n                    viewBox=\"0 0 8 14\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      d=\"M7 13L1 6.93015L6.86175 1\"\r\n                      stroke=\"#D3D3D3\"\r\n                      strokeWidth=\"1.5\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </svg>\r\n\r\n                  <span>Вернуться назад</span>\r\n                </Link>\r\n                <div className=\"button pay-btn\">\r\n                  <span>Оплатить сейчас</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    cart: getCart(state),\r\n    orderNumber: getOrderNumber(state),\r\n    orderPrice: getOrderPrice(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CartOrder);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"../pages/Main\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CartEmpty from \"../pages/CartEmpty\";\r\nimport CartOrder from \"../pages/CartOrder\";\r\n\r\nconst Router = () => {\r\n  const cart = useSelector(({ cart }: any) => cart.productsInCart);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/pizza-typescript\" component={Main} exact />\r\n      {cart.length ? (\r\n        <Route path=\"/cart\" component={CartOrder} exact />\r\n      ) : (\r\n        <Route path=\"/cart\" component={CartEmpty} exact />\r\n      )}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { FC } from \"react\";\r\nimport Router from \"./Router\";\r\n\r\nconst App: FC = () => <Router />;\r\n\r\nexport default App;\r\n","import {\r\n  LOAD_PIZZAS,\r\n  SET_CURRENT_FILTER,\r\n  SET_CURRENT_SORTING_OPTION,\r\n} from \"../actions/app\";\r\nimport { PizzaProps } from \"../../types\";\r\n\r\ninterface IActionTypes {\r\n  type: string;\r\n  payload: PizzaProps[] | string;\r\n}\r\n\r\ninterface IInitialStateTypes {\r\n  pizzas: PizzaProps[];\r\n  filters: {\r\n    [key: string]: string;\r\n  };\r\n  currentFilter: string;\r\n  sortingOptions: {\r\n    [key: string]: string;\r\n  };\r\n  currentSortingOption: string;\r\n}\r\n\r\nconst initialState: IInitialStateTypes = {\r\n  pizzas: [],\r\n  filters: {\r\n    all: \"Все\",\r\n    meat: \"Мясные\",\r\n    vegi: \"Вегитарианские\",\r\n    chicken: \"С курицей\",\r\n    fish: \"С рыбой\",\r\n    spicy: \"Острые\",\r\n  },\r\n  currentFilter: \"all\",\r\n  sortingOptions: {\r\n    default: \"популярности\",\r\n    asc: \"сначала дешевые\",\r\n    desc: \"сначала дорогие\",\r\n    alph: \"алфавиту\",\r\n  },\r\n  currentSortingOption: \"default\",\r\n};\r\n\r\nconst appReducer = (state = initialState, { type, payload }: IActionTypes) => {\r\n  switch (type) {\r\n    case LOAD_PIZZAS:\r\n      return {\r\n        ...state,\r\n        pizzas: payload,\r\n      };\r\n    case SET_CURRENT_FILTER:\r\n      console.log(\"filter from set\", payload);\r\n      return {\r\n        ...state,\r\n        currentFilter: payload,\r\n      };\r\n    case SET_CURRENT_SORTING_OPTION:\r\n      console.log(\"sorting option \", payload);\r\n      return {\r\n        ...state,\r\n        currentSortingOption: payload,\r\n      };\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport { appReducer };\r\n","import { PizzaInCartProps } from \"../../types\";\r\nimport {\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  CLEAR_CART,\r\n  ADD_EXISTING_ITEM,\r\n  HANDLE_INCREMENT,\r\n  HANDLE_DECREMENT,\r\n} from \"../actions/cart\";\r\n\r\ninterface IInitialStateTypes {\r\n  productsInCart: PizzaInCartProps[];\r\n  orderNumber: number;\r\n  orderPriceTotal: number;\r\n}\r\n\r\nconst initialState: IInitialStateTypes = {\r\n  productsInCart: [],\r\n  orderNumber: 0,\r\n  orderPriceTotal: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, { type, payload }: any) => {\r\n  switch (type) {\r\n    case ADD_TO_CART:\r\n      console.log(\"adding to cart!!!\", payload);\r\n      return {\r\n        ...state,\r\n        productsInCart: state.productsInCart.concat({\r\n          id: Math.random(),\r\n          imageUrl: payload.img,\r\n          name: payload.name,\r\n          type: payload.type,\r\n          size: payload.size,\r\n          quantity: 1,\r\n          pizzaPrice: payload.price,\r\n          totalPrice: payload.price,\r\n        }),\r\n      };\r\n    case ADD_EXISTING_ITEM:\r\n      const { index, price } = payload;\r\n      const updated = [...state.productsInCart];\r\n      updated[index].quantity = updated[index].quantity + 1;\r\n      updated[index].totalPrice = updated[index].totalPrice + price;\r\n      return {\r\n        ...state,\r\n        productsInCart: updated,\r\n      };\r\n    case HANDLE_INCREMENT:\r\n      console.log(payload);\r\n      const incremented = [...state.productsInCart];\r\n      incremented[payload.index].quantity += 1;\r\n      incremented[payload.index].totalPrice += payload.price;\r\n      return {\r\n        ...state,\r\n        productsInCart: incremented,\r\n      };\r\n    case HANDLE_DECREMENT:\r\n      console.log(payload);\r\n      const decremented = [...state.productsInCart];\r\n      if (decremented[payload.index].quantity > 1) {\r\n        decremented[payload.index].quantity -= 1;\r\n        decremented[payload.index].totalPrice -= payload.price;\r\n      }\r\n      return {\r\n        ...state,\r\n        productsInCart: decremented,\r\n      };\r\n    case REMOVE_FROM_CART:\r\n      const copy = [...state.productsInCart];\r\n      copy.splice(payload, 1);\r\n      return {\r\n        ...state,\r\n        productsInCart: copy,\r\n      };\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        productsInCart: [],\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport { cartReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { appReducer } from \"./appReducer\";\r\nimport { cartReducer } from \"./cartReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whiteList: [\"cart\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  cart: cartReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport rootReducer from \"../redux/reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// export type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport { store, persistor };\r\n","import { createBrowserHistory } from \"history\";\r\nexport const history = createBrowserHistory();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./scss/app.scss\";\r\nimport App from \"./app/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./app/store\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { history } from \"./app/history\";\r\n\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}