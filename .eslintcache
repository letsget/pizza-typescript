[{"H:\\coding\\pizza-typescript\\src\\components\\Categories\\index.tsx":"1","H:\\coding\\pizza-typescript\\src\\pages\\Main.tsx":"2","H:\\coding\\pizza-typescript\\src\\components\\Sorting\\index.tsx":"3","H:\\coding\\pizza-typescript\\src\\components\\Title\\index.tsx":"4","H:\\coding\\pizza-typescript\\src\\index.tsx":"5","H:\\coding\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx":"6","H:\\coding\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx":"7","H:\\coding\\pizza-typescript\\src\\components\\Logo\\index.tsx":"8","H:\\coding\\pizza-typescript\\src\\app\\App.tsx":"9","H:\\coding\\pizza-typescript\\src\\app\\history.ts":"10","H:\\coding\\pizza-typescript\\src\\app\\Router.tsx":"11","H:\\coding\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx":"12","H:\\coding\\pizza-typescript\\src\\components\\Header\\index.tsx":"13","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\index.tsx":"14","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx":"15","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx":"16","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\Main.tsx":"17","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx":"18","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Sorting\\index.tsx":"19","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\store.ts":"20","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\appReducer.ts":"21","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\selectors\\index.ts":"22"},{"size":639,"mtime":1608402536721,"results":"23","hashOfConfig":"24"},{"size":2477,"mtime":1608724180333,"results":"25","hashOfConfig":"24"},{"size":2280,"mtime":1608643161014,"results":"26","hashOfConfig":"24"},{"size":139,"mtime":1608368372530,"results":"27","hashOfConfig":"24"},{"size":639,"mtime":1608639933734,"results":"28","hashOfConfig":"24"},{"size":3016,"mtime":1608642871951,"results":"29","hashOfConfig":"24"},{"size":1818,"mtime":1608641277612,"results":"30","hashOfConfig":"24"},{"size":405,"mtime":1608366811213,"results":"31","hashOfConfig":"24"},{"size":122,"mtime":1608659716443,"results":"32","hashOfConfig":"24"},{"size":97,"mtime":1608637323667,"results":"33","hashOfConfig":"24"},{"size":369,"mtime":1608650484697,"results":"34","hashOfConfig":"24"},{"size":2513,"mtime":1608742941715,"results":"35","hashOfConfig":"24"},{"size":317,"mtime":1608367269904,"results":"36","hashOfConfig":"24"},{"size":505,"mtime":1616866533309,"results":"37","hashOfConfig":"38"},{"size":2513,"mtime":1616859986169,"results":"39","hashOfConfig":"38"},{"size":3016,"mtime":1616859986171,"results":"40","hashOfConfig":"38"},{"size":3425,"mtime":1616867216171,"results":"41","hashOfConfig":"38"},{"size":1818,"mtime":1616859986168,"results":"42","hashOfConfig":"38"},{"size":2280,"mtime":1616859986170,"results":"43","hashOfConfig":"38"},{"size":379,"mtime":1616866721869,"results":"44","hashOfConfig":"38"},{"size":660,"mtime":1616865564428,"results":"45","hashOfConfig":"38"},{"size":237,"mtime":1616866846610,"results":"46","hashOfConfig":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fm8nlz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nyl31l",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},"H:\\coding\\pizza-typescript\\src\\components\\Categories\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\pages\\Main.tsx",[],"H:\\coding\\pizza-typescript\\src\\components\\Sorting\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\components\\Title\\index.tsx",["93"],"H:\\coding\\pizza-typescript\\src\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx",[],"H:\\coding\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\components\\Logo\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\app\\App.tsx",[],"H:\\coding\\pizza-typescript\\src\\app\\history.ts",[],"H:\\coding\\pizza-typescript\\src\\app\\Router.tsx",[],"H:\\coding\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx",[],"H:\\coding\\pizza-typescript\\src\\components\\Header\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\Main.tsx",["94","95"],"import React, { FC, useEffect, useState } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Categories from \"../components/Categories\";\r\nimport Sorting from \"../components/Sorting\";\r\nimport Title from \"../components/Title\";\r\nimport PizzaItem from \"../components/PizzaItem\";\r\nimport { PizzaProps } from \"../types\";\r\nimport { getAllPizzas, getCurrentFilter, getFilters } from \"../redux/selectors\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadPizzasAsync, setCurrentFilter } from \"../redux/actions/app\";\r\nimport { connect } from \"react-redux\";\r\n\r\n/*\r\n  0 Install and setup redux\r\n  1 load pizzas and put them in a redux state\r\n  2 Move filters to redux state\r\n  3 Add setActiveFilter and active filter to redux state and actions\r\n  4 add reselect to fetch the requird data from redux store\r\n  5 write selectors and reselect for filtering/sorting\r\n  6 add Cart state to redux store and add actions to add items to cart\r\n*/\r\n\r\n// interface Props {\r\n//   data: PizzaProps[];\r\n// }\r\n\r\nconst sortItems: string[] = [\"популярности\", \"цене\", \"алфавиту\"];\r\n\r\nconst Main: FC = (props) => {\r\n  console.log(\"пропсы с редакса\", props);\r\n  const dispatch = useDispatch();\r\n  const [data, setData] = useState<null | []>(null);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const result = await fetch(\"http://localhost:3000/db.json\");\r\n      const response = await result.json();\r\n      setData(response.pizzas);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    loadPizzasAsync(dispatch);\r\n  }, []);\r\n\r\n  const doughTypes = [\"тонкое\", \"традиционное\"];\r\n  const availableSizes = [26, 30, 40];\r\n\r\n  const items: string[] = [\r\n    \"Все\",\r\n    \"Мясные\",\r\n    \"Вегитарианские\",\r\n    \"Гриль\",\r\n    \"Острые\",\r\n    \"Закрытые\",\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Header />\r\n        <div className=\"content\">\r\n          <div className=\"container\">\r\n            <div className=\"content__top\">\r\n              <Categories items={items} />\r\n              <Sorting sortItems={sortItems} />\r\n            </div>\r\n            <Title />\r\n            <div className=\"content__items\">\r\n              {data &&\r\n                data.map(\r\n                  ({\r\n                    id,\r\n                    imageUrl,\r\n                    name,\r\n                    types,\r\n                    sizes,\r\n                    price,\r\n                    category,\r\n                    rating,\r\n                  }: PizzaProps) => (\r\n                    <PizzaItem\r\n                      key={id}\r\n                      imageUrl={imageUrl}\r\n                      name={name}\r\n                      types={types}\r\n                      doughTypes={doughTypes}\r\n                      availableSizes={availableSizes}\r\n                      sizes={sizes}\r\n                      price={price}\r\n                      category={category}\r\n                      rating={rating}\r\n                    />\r\n                  )\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    pizzas: getAllPizzas(state),\r\n    filter: getCurrentFilter(state),\r\n    filters: getFilters(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Sorting\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\store.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\appReducer.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\selectors\\index.ts",["96"],"import { createSelector } from \"reselect\";\r\n\r\nexport const getAllPizzas = ({ app }: any) => app.pizzas;\r\n\r\nexport const getCurrentFilter = ({ app }: any) => app.currentFilter;\r\n\r\nexport const getFilters = ({ app }: any) => app.filters;\r\n",{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"101","line":10,"column":27,"nodeType":"99","messageId":"100","endLine":10,"endColumn":43},{"ruleId":"102","severity":1,"message":"103","line":47,"column":6,"nodeType":"104","endLine":47,"endColumn":8,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'setCurrentFilter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'createSelector' is defined but never used.",{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},[1571,1573],"[dispatch]"]