[{"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\index.ts":"1","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Sorting\\index.tsx":"2","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\Router.tsx":"3","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\CartItem\\index.tsx":"4","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\index.tsx":"5","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\history.ts":"6","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx":"7","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartOrder\\index.tsx":"8","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx":"9","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\actions\\app.ts":"10","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\Main.tsx":"11","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\cartReducer.ts":"12","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\actions\\cart.ts":"13","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\store.ts":"14","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\selectors\\index.ts":"15","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx":"16","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\appReducer.ts":"17","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaOrderPopup\\index.tsx":"18","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Portal\\index.ts":"19","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\CartTop\\index.tsx":"20","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Header\\index.tsx":"21","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\hooks\\useLocalStorage.ts":"22"},{"size":309,"mtime":1618039822030,"results":"23","hashOfConfig":"24"},{"size":2603,"mtime":1616953751855,"results":"25","hashOfConfig":"24"},{"size":638,"mtime":1617379799403,"results":"26","hashOfConfig":"24"},{"size":4703,"mtime":1617787776028,"results":"27","hashOfConfig":"24"},{"size":422,"mtime":1618039879706,"results":"28","hashOfConfig":"24"},{"size":138,"mtime":1617276095325,"results":"29","hashOfConfig":"24"},{"size":3059,"mtime":1617276630973,"results":"30","hashOfConfig":"24"},{"size":4723,"mtime":1618046575462,"results":"31","hashOfConfig":"24"},{"size":2071,"mtime":1617275841817,"results":"32","hashOfConfig":"24"},{"size":961,"mtime":1617452134129,"results":"33","hashOfConfig":"24"},{"size":4825,"mtime":1618040178895,"results":"34","hashOfConfig":"24"},{"size":2876,"mtime":1617702418045,"results":"35","hashOfConfig":"24"},{"size":1649,"mtime":1617813264377,"results":"36","hashOfConfig":"24"},{"size":440,"mtime":1618039977618,"results":"37","hashOfConfig":"24"},{"size":1743,"mtime":1617639859543,"results":"38","hashOfConfig":"24"},{"size":1862,"mtime":1617637577772,"results":"39","hashOfConfig":"24"},{"size":1603,"mtime":1617639579975,"results":"40","hashOfConfig":"24"},{"size":4947,"mtime":1618046656703,"results":"41","hashOfConfig":"24"},{"size":484,"mtime":1617601941343,"results":"42","hashOfConfig":"24"},{"size":3350,"mtime":1618039988973,"results":"43","hashOfConfig":"24"},{"size":409,"mtime":1617133955220,"results":"44","hashOfConfig":"24"},{"size":1340,"mtime":1618046256791,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nyl31l",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\index.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Sorting\\index.tsx",["93"],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\Router.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\CartItem\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\history.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartEmpty\\index.jsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\CartOrder\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\HeaderCart\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\actions\\app.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\pages\\Main.tsx",["94","95"],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\cartReducer.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\actions\\cart.ts",["96"],"import { PizzaProps, PizzaInCartProps } from \"../../types\";\r\nexport const LOAD_CART_PRODUCTS = \"LOAD_CART_PRODUCTS\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_EXISTING_ITEM = \"ADD_EXISTING_ITEM\";\r\nexport const HANDLE_INCREMENT = \"HANDLE_INCREMENT\";\r\nexport const HANDLE_DECREMENT = \"HANDLE_DECREMENT\";\r\nexport const GET_ORDER_PRICE = \"GET_ORDER_PRICE\";\r\nexport const GET_ORDER_LENGTH = \"GET_ORDER_LENGTH\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\nexport const loadCartProducts = (cart: PizzaInCartProps[]) => ({\r\n  type: LOAD_CART_PRODUCTS,\r\n  payload: cart,\r\n});\r\n\r\nexport const addToCart = (\r\n  type: string,\r\n  size: number,\r\n  price: number,\r\n  img: string,\r\n  name: string,\r\n  options: any[]\r\n) => ({\r\n  type: ADD_TO_CART,\r\n  payload: { type, size, price, img, name, options },\r\n});\r\n\r\nexport const addExistingItem = (index: number, price: number) => ({\r\n  type: ADD_EXISTING_ITEM,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const handleIncrement = (index: number, price: number) => ({\r\n  type: HANDLE_INCREMENT,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const handleDecrement = (index: number, price: number) => ({\r\n  type: HANDLE_DECREMENT,\r\n  payload: { index, price },\r\n});\r\n\r\nexport const getOrderPrice = (totalPrice: number) => ({\r\n  type: GET_ORDER_PRICE,\r\n  payload: totalPrice,\r\n});\r\n\r\nexport const getOrderLength = (len: number) => ({\r\n  type: GET_ORDER_LENGTH,\r\n  payload: len,\r\n});\r\n\r\nexport const removeFromCart = (index: number) => ({\r\n  type: REMOVE_FROM_CART,\r\n  payload: index,\r\n});\r\n\r\nexport const clearCart = () => ({\r\n  type: CLEAR_CART,\r\n});\r\n","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\app\\store.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\selectors\\index.ts",["97"],"import { createSelector } from \"reselect\";\r\nimport { PizzaProps, PizzaInCartProps } from \"../../types\";\r\nimport { AppState } from \"../reducers\";\r\n\r\nexport const getSortingOptions = ({ app }: any) => app.sortingOptions;\r\n\r\nexport const getCurrentSortingOption = ({ app }: any) =>\r\n  app.currentSortingOption;\r\n\r\nexport const getAllPizzas = ({ app }: any) => app.pizzas;\r\n\r\nexport const getCurrentFilter = ({ app }: any) => app.currentFilter;\r\n\r\nexport const getFilters = ({ app }: any) => app.filters;\r\n\r\nexport const getCart = ({ cart }: any) => cart.productsInCart;\r\n\r\nexport const getOrderNumber = ({ cart }: any) => cart.productsInCart.length;\r\n\r\nexport const getTotalOrderPrice = ({ cart }: any) =>\r\n  cart.productsInCart.reduce(\r\n    (acc: number, curr: PizzaInCartProps) =>\r\n      acc + curr.pizzaPrice * curr.quantity,\r\n    0\r\n  );\r\n\r\nexport const pizzasToRender = createSelector(\r\n  [getCurrentFilter, getAllPizzas, getFilters],\r\n  (filter, pizzas, filters) => {\r\n    if (filter === \"all\") {\r\n      return pizzas;\r\n    } else {\r\n      return pizzas.filter(\r\n        (pizza: PizzaProps) =>\r\n          pizza.category.toLowerCase() === filters[filter].toLowerCase()\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const sortedPizzas = createSelector(\r\n  [getCurrentSortingOption, pizzasToRender],\r\n  (option, pizzas) => {\r\n    if (option === \"default\") {\r\n      return pizzas;\r\n    } else if (option === \"asc\") {\r\n      return [...pizzas].sort(\r\n        (a: PizzaProps, b: PizzaProps) => a.price[0] - b.price[0]\r\n      );\r\n    } else if (option === \"desc\") {\r\n      return [...pizzas].sort((a, b) => b.price[0] - a.price[0]);\r\n    } else if (option === \"alph\") {\r\n      return [...pizzas].sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    }\r\n  }\r\n);\r\n","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaItem\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\redux\\reducers\\appReducer.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\PizzaOrderPopup\\index.tsx",["98","99"],"import React, { FC, useState } from \"react\";\r\nimport { addToCart, addExistingItem } from \"../../redux/actions/cart\";\r\nimport { PizzaInCartProps, PizzaPopupProps } from \"../../types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\nimport classNames from \"classnames\";\r\n\r\nconst PizzaOrderPopup: FC<PizzaPopupProps> = ({\r\n  imageUrl,\r\n  name,\r\n  types,\r\n  sizes,\r\n  price,\r\n  extras,\r\n  onPopupClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector(({ cart }: any) => cart.productsInCart);\r\n  const [activeType, setActiveType] = useState(types[0]);\r\n  const [activeSize, setActiveSize] = useState(sizes[1]);\r\n  const [finalPrice, setFinalPrice] = useState(price[1]);\r\n  const [persistCart, setPersistCart] = useLocalStorage<string>(\r\n    \"cart\",\r\n    \"empty\"\r\n  );\r\n\r\n  const options = Object.entries(extras).reduce((acc: any, [key, val]) => {\r\n    const obj = { name: key, price: val, selected: false };\r\n    return [...acc, obj];\r\n  }, []);\r\n\r\n  const [extraOptions, setExtraOptions] = useState(options);\r\n  const [priceForOptions, setPriceForOptions] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState<Array<String>>([]);\r\n\r\n  const calcExtrasPrice = (): void => {\r\n    let price = 0;\r\n    let selected = [];\r\n\r\n    for (const elem of extraOptions) {\r\n      if (elem.selected) {\r\n        price += elem.price;\r\n        selected.push(elem.name);\r\n      }\r\n    }\r\n    setPriceForOptions(price);\r\n    setSelectedOptions(selected);\r\n  };\r\n\r\n  const onSelectType = (type: string): void => {\r\n    setActiveType(type);\r\n  };\r\n\r\n  const onSelectSize = (size: number, index: number): void => {\r\n    setActiveSize(size);\r\n    setFinalPrice(price[index]);\r\n  };\r\n\r\n  const onSelectExtras = (i: number): void => {\r\n    const copy = [...extraOptions];\r\n    copy[i].selected = !copy[i].selected;\r\n    setExtraOptions(copy);\r\n    calcExtrasPrice();\r\n  };\r\n\r\n  const onAdd = (): void => {\r\n    const index = cart.findIndex(\r\n      (item: PizzaInCartProps) =>\r\n        item.name === name &&\r\n        item.type === activeType &&\r\n        item.size === activeSize &&\r\n        selectedOptions.length === 0\r\n    );\r\n    if (index >= 0) {\r\n      dispatch(addExistingItem(index, finalPrice));\r\n      onPopupClose();\r\n    } else {\r\n      dispatch(\r\n        addToCart(\r\n          activeType,\r\n          activeSize,\r\n          finalPrice + priceForOptions,\r\n          imageUrl,\r\n          name,\r\n          selectedOptions\r\n        )\r\n      );\r\n      onPopupClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup-content\">\r\n      <div className=\"pizza-image\">\r\n        <img\r\n          className={classNames({\r\n            \"popup-img-small\": activeSize === sizes[0],\r\n            \"popup-img-medium\": activeSize === sizes[1],\r\n            \"popup-img-large\": activeSize === sizes[2],\r\n          })}\r\n          src={imageUrl}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"popup-right\">\r\n        <span onClick={onPopupClose}>\r\n          <i className=\"fas fa-times close-popup\" />\r\n        </span>\r\n        <h3>{name}</h3>\r\n        <ul className=\"types\">\r\n          {types.map((doughType: string, index: number) => (\r\n            <li\r\n              className={classNames({\r\n                active: doughType === activeType,\r\n                type: doughType,\r\n              })}\r\n              onClick={() => onSelectType(doughType)}\r\n              key={index}\r\n            >\r\n              {doughType}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul className=\"types\">\r\n          {sizes.map((size: number, index: number) => (\r\n            <li\r\n              key={index}\r\n              onClick={() => onSelectSize(size, index)}\r\n              className={classNames({\r\n                active: activeSize === size,\r\n                type: size,\r\n              })}\r\n            >\r\n              {size} см.\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul className=\"extras\">\r\n          {extraOptions.map((option: any, index: number) => (\r\n            <li key={index} className=\"extra-option\">\r\n              <div className=\"checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={option.selected}\r\n                  onChange={() => onSelectExtras(index)}\r\n                />\r\n                <span className=\"name\">{option.name}</span>\r\n              </div>\r\n              <div className=\"price\">\r\n                <span className=\"price\">\r\n                  <span>{option.price} </span>\r\n                  <span className=\"ruble-sign\">₽</span>\r\n                </span>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div onClick={onAdd} className=\"button\">\r\n          Добавить в корзину за {finalPrice + priceForOptions} ₽\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PizzaOrderPopup;\r\n","H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Portal\\index.ts",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\CartTop\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\components\\Header\\index.tsx",[],"H:\\coding\\pizzaAttempts\\pizza-typescript\\src\\hooks\\useLocalStorage.ts",[],{"ruleId":"100","severity":1,"message":"101","line":16,"column":10,"nodeType":"102","messageId":"103","endLine":16,"endColumn":16},{"ruleId":"100","severity":1,"message":"104","line":1,"column":32,"nodeType":"102","messageId":"103","endLine":1,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":78,"column":6,"nodeType":"107","endLine":78,"endColumn":8,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":20},{"ruleId":"100","severity":1,"message":"110","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"111","line":22,"column":10,"nodeType":"102","messageId":"103","endLine":22,"endColumn":21},{"ruleId":"100","severity":1,"message":"112","line":22,"column":23,"nodeType":"102","messageId":"103","endLine":22,"endColumn":37},"@typescript-eslint/no-unused-vars","'active' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'PizzaProps' is defined but never used.","'AppState' is defined but never used.","'persistCart' is assigned a value but never used.","'setPersistCart' is assigned a value but never used.",{"desc":"114","fix":"115"},"Update the dependencies array to be: [dispatch]",{"range":"116","text":"117"},[2498,2500],"[dispatch]"]